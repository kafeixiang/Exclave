name: Release Build
on:
  push:
    branches:
      - dev*
    paths:
      - "app/**"
      - "buildSrc/**"
      - "library/**"
      - ".github/workflows/release.yml"
  workflow_dispatch:
    inputs:
      publish:
        description: 'Release (y/n)'
        required: false
      tag:
        description: 'Release Tag'
        required: false
jobs:
  libcore:
    name: Native Build (LibCore)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Fetch Status
        run: git submodule status library/core > libcore_status
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.4
          cache-dependency-path: "**/go.sum"
      - name: Setup Java
        uses: actions/setup-java@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Setup Android NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27c
      - name: LibCore Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'bin/lib/core/*', 'libcore_status') }}
      - name: Native Build
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          ./run lib core
      - name: Upload LibCore
        uses: actions/upload-artifact@v4
        with:
          path: app/libs/libcore.aar
          name: "LibCore"
  build:
    name: Gradle Build
    runs-on: ubuntu-latest
    needs:
      - libcore
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Fetch Status
        run: |
          git submodule status library/core > libcore_status
      - name: Setup Java
        uses: actions/setup-java@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          distribution: 'temurin'
          java-version: 21
      - name: LibCore Cache
        uses: actions/cache@v4
        with:
          path: |
            app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'bin/lib/core/*', 'libcore_status') }}
      - name: Gradle cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('**/*.gradle.kts') }}
      - name: Release Build
        env:
          BUILD_PLUGIN: none
        run: |
          ./gradlew :app:downloadAssets
          ./gradlew :app:assembleOssRelease
          APK=$(find app/build/outputs/apk -name '*arm64-v8a*.apk')
          APK=$(dirname "$APK")
          echo "APK=$APK" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        with:
          name: APKs
          path: ${{ env.APK }}
  publish:
    name: Publish Release
    if: github.event.inputs.publish == 'y' && github.event.inputs.tag != ''
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Donwload Artifacts
        uses: actions/download-artifact@v4
        with:
          name: APKs
          path: artifacts
      - name: Release
        run: |
          wget -O ghr.tar.gz https://github.com/tcnksm/ghr/releases/download/v0.17.0/ghr_v0.17.0_linux_amd64.tar.gz
          tar -xvf ghr.tar.gz
          mv ghr*linux_amd64/ghr .
          mkdir apks
          find artifacts -name "*.apk" -exec cp {} apks \;
          ./ghr -replace -prerelease -t "${{ github.token }}" -n "${{ github.event.inputs.tag }}" "${{ github.event.inputs.tag }}" apks
